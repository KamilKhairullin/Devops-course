# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push

env: 
  APP_PATH: ./app_python/myapp
  DOCKER_PATH: ./app_python/Dockerfile
  IMAGE_NAME: devops_inno

jobs:
  check_code:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9]

    defaults:
          run:
            working-directory: ${{ env.APP_PATH }}
            
    steps:
    - name: Checkout Github repository
      uses: actions/checkout@v2

    - name: Install Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: ${{matrix.python-version}}
       
    - name: Install pdm
      uses: pdm-project/setup-pdm@v2.1
      with:
        python-version: ${{matrix.python-version}}  # Version range or exact version of a Python version to use, the same as actions/setup-python
        architecture: x64    # The target architecture (x86, x64) of the Python interpreter. the same as actions/setup-python
        version: 1.8.0       # The version of PDM to install. Leave it as empty to use the latest version from PyPI
        prerelease: true     # Allow prerelease versions to be installed
        enable-pep582: true  # Enable PEP 582 package loading globally

    - name: Install dependencies
      run: pdm install -v 
        
    - name: run formatting tools
      run: |
       pdm run black main.py
       pdm run darglint main.py
       pdm run isort main.py

    - name: run linters
      run: pdm run pylint main.py

    - name: run tests
      run: pdm run python -m pytest tests

   
  push_to_dockerhub:
    needs: check_code
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Github repository
        uses: actions/checkout@v2

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
              
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1

    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        context: ${{ env.APP_PATH }}
        file: ${{ env.DOCKER_PATH }}
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest
        
#        cache-from: type=local,src=/tmp/.buildx-cache
#        cache-to: type=local,dest=/tmp/.buildx-cache
        
#    - name: Image digest
#      run: echo ${{ steps.docker_build.outputs.digest }}