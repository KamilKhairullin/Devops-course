# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push

env: 
  APP_PATH: ./app_python/myapp
jobs:
  check_code:
    runs-on: ubuntu-latest

    defaults:
          run:
            working-directory: ${{ env.APP_PATH }}
            
    steps:
    - name: Checkout Github repository
      uses: actions/checkout@v2

    - name: Install Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install pdm
      uses: pdm-project/setup-pdm@v2.1
      with:
        python-version: 3.8  # Version range or exact version of a Python version to use, the same as actions/setup-python
        architecture: x64    # The target architecture (x86, x64) of the Python interpreter. the same as actions/setup-python
        version: 1.4.0       # The version of PDM to install. Leave it as empty to use the latest version from PyPI
        prerelease: true     # Allow prerelease versions to be installed
        enable-pep582: true  # Enable PEP 582 package loading globally

    - name: Install dependencies
      run: |
        pdm uninstall resolvelib
        pdm install -v
        
    - name: run formatting tools
      run: |
        pdm run black main.py
        pdm run darglint main.py
        pdm run isort main.py

      
  # build:

  #   runs-on: ubuntu-latest

  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Set up Python 3.9
  #     uses: actions/setup-python@v2
  #     with:
  #       python-version: 3.9
  #   - name: Install dependencies
  #     run: |
  #       python -m pip install --upgrade pip
  #       pip install flake8 pytest
  #       if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
  #   - name: Lint with flake8
  #     run: |
  #       # stop the build if there are Python syntax errors or undefined names
  #       flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
  #       # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
  #       flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
  #   - name: Test with pytest
  #     run: |
  #       pytest
